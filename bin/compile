#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

set -e # fail fast

# parse params
BUILD_DIR=$1
CACHE_DIR=$2
BUILDPACK_NAME=cairo
STACK=cedar
DISTRO=`lsb_release -a`
KERNEL_VER=`uname -a`

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

function vendor() {
  binary="$1"
  path="$2"
  
  echo "Fetching $binary" | indent
  echo "mkdir -p $path" | indent
  mkdir -p $path 2>&1 | indent
  echo "curl $binary -s -o - | tar xz -C $path -f -" | indent
  curl $binary -s -o - | tar xz -C $path -f - 2>&1 | indent

  if [ -d "$path/bin" ]; then
    export PATH=$path/bin:$PATH
  fi

  if [ -d "$path/lib/pkgconfig" ]; then
    # pkg-config should handle compiler options (if used)
    export PKG_CONFIG_PATH="$path/lib/pkgconfig:$PKG_CONFIG_PATH"
  fi

  # standard paths
  export CPPPATH="$path/include:$CPPPATH"
  export CPATH="$path/include:$CPATH"
  export LIBRARY_PATH="$path/lib:$LIBRARY_PATH"

  export LD_LIBRARY_PATH="$path/lib:$LD_LIBRARY_PATH"
}

function build(){
	package=$1
	src=$2
	target_dir=$3/$package
	tar_options=$4
	src_dir=$BUILD_DIR/src
	
	echo "------> Building package $package"
	
	echo $src
	echo $src_dir
	echo $target_dir
	
	mkdir -p $src_dir
	mkdir -p $target_dir
	
	curl $src -s -o - | tar x$tar_options -C $src_dir -f -
	cd $src_dir/$package-*
	# Don't build all docs - scatter gun fix for giflib wanting to build docs with xmlto which is not installed.
	# Ref: http://osdir.com/ml/blfs-dev/2013-07/msg00145.html
	if [ -e doc/Makefile.in ]
	then
		sed -i "s/all: allhtml/all:/" doc/Makefile.in
	fi

	echo "------> Configure $package"
	./configure --prefix=$target_dir

	echo "------> Make install $package"
	make all install

	ls -l $target_dir 2>&1
}

echo "Linux distro: $DISTRO" | indent
echo "Linux kernel: $KERNEL_VER" | indent

echo "-----> Vendoring binaries" | indent
vendor "https://s3.amazonaws.com/mojodna-heroku/$STACK/cairo-1.12.16-1.tar.gz"  "$BUILD_DIR/vendor/cairo"
vendor "https://s3.amazonaws.com/mojodna-heroku/$STACK/freetype-2.5.3-1.tar.gz" "$BUILD_DIR/vendor/freetype"
vendor "https://s3.amazonaws.com/mojodna-heroku/$STACK/giflib-4.2.3-1.tar.gz"   "$BUILD_DIR/vendor/giflib"
vendor "https://s3.amazonaws.com/mojodna-heroku/$STACK/pixman-0.32.6-1.tar.gz"  "$BUILD_DIR/vendor/pixman"

#build pixman "http://cairographics.org/releases/pixman-0.32.6.tar.gz" "$BUILD_DIR/vendor" z
#build freetype " http://ftp.twaren.net/Unix/NonGNU//freetype/freetype-2.5.3.tar.gz" "$BUILD_DIR/vendor" z
#build giflib " http://ufpr.dl.sourceforge.net/project/giflib/giflib-4.x/giflib-4.2.3.tar.gz" "$BUILD_DIR/vendor" z
#build cairo "http://cairographics.org/releases/cairo-1.12.16.tar.xz" "$BUILD_DIR/vendor" J

echo "-----> Tweaking Cairo, FreeType, and Pixman include paths"

# node-canvas isn't using pkg-config, so we need to set non-standard paths
export CPPPATH="$BUILD_DIR/vendor/cairo/include/cairo:$BUILD_DIR/vendor/pixman/include/pixman-1:$BUILD_DIR/vendor/freetype/include/freetype2:$CPPPATH"
export CPATH="$BUILD_DIR/vendor/cairo/include/cairo:$BUILD_DIR/vendor/pixman/include/pixman-1:$BUILD_DIR/vendor/freetype/include/freetype2:$CPATH"

echo "-----> Configuring build environment"

cat <<EOF > export
export PATH="$PATH:\$PATH"
export LD_LIBRARY_PATH="\$LD_LIBRARY_PATH:$LD_LIBRARY_PATH"
export LIBRARY_PATH="\$LIBRARY_PATH:$LIBRARY_PATH"
export PKG_CONFIG_PATH="\$PKG_CONFIG_PATH:$PKG_CONFIG_PATH"
export CPPPATH="\$CPPPATH:$CPPPATH"
export CPATH="\$CPATH:$CPATH"
EOF

echo "-----> Building runtime environment"
mkdir -p $BUILD_DIR/.profile.d

cat <<EOF > $BUILD_DIR/.profile.d/$BUILDPACK_NAME.sh
export PATH="${PATH//$BUILD_DIR//app}:\$PATH"
export LD_LIBRARY_PATH="\$LD_LIBRARY_PATH:${LD_LIBRARY_PATH//$BUILD_DIR//app}"
export LIBRARY_PATH="\$LIBRARY_PATH:${LIBRARY_PATH//$BUILD_DIR//app}"
export PKG_CONFIG_PATH="\$PKG_CONFIG_PATH:${PKG_CONFIG_PATH//$BUILD_DIR//app}"
export CPPPATH="\$CPPPATH:${CPPPATH//$BUILD_DIR//app}"
export CPATH="\$CPATH:${CPATH//$BUILD_DIR//app}"
EOF
